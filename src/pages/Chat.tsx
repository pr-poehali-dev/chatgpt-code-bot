import { useState } from 'react';
import { Button } from '@/components/ui/button';
import { Textarea } from '@/components/ui/textarea';
import { Card } from '@/components/ui/card';
import { ScrollArea } from '@/components/ui/scroll-area';
import Icon from '@/components/ui/icon';
import { Avatar, AvatarFallback } from '@/components/ui/avatar';
import { useNavigate } from 'react-router-dom';

interface Message {
  id: string;
  role: 'user' | 'assistant';
  content: string;
}

const getAIResponse = (userMessage: string): string => {
  const lower = userMessage.toLowerCase();
  
  if (lower.includes('–ø—Ä–∏–≤–µ—Ç') || lower.includes('–∑–¥—Ä–∞–≤—Å—Ç–≤—É–π')) {
    return '–ü—Ä–∏–≤–µ—Ç! –Ø —Ç–≤–æ–π AI-–ø–æ–º–æ—â–Ω–∏–∫ –ø–æ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—é –Ω–∞ Lua –∏ Python. –†–∞—Å—Å–∫–∞–∂–∏, –Ω–∞–¥ —á–µ–º —Ä–∞–±–æ—Ç–∞–µ—à—å?';
  }
  
  if (lower.includes('python') && (lower.includes('—Ñ—É–Ω–∫—Ü–∏') || lower.includes('–Ω–∞–ø–∏—à–∏'))) {
    return '–ö–æ–Ω–µ—á–Ω–æ! –í–æ—Ç –ø—Ä–∏–º–µ—Ä —Ñ—É–Ω–∫—Ü–∏–∏ –Ω–∞ Python:\n\n```python\ndef example_function(param):\n    result = param * 2\n    return result\n\nprint(example_function(5))  # –í—ã–≤–æ–¥: 10\n```\n\n–û–ø–∏—à–∏ –ø–æ–¥—Ä–æ–±–Ω–µ–µ —á—Ç–æ –¥–æ–ª–∂–Ω–∞ –¥–µ–ª–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—è, –∏ —è –Ω–∞–ø–∏—à—É —Ç–æ—á–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ!';
  }
  
  if (lower.includes('lua')) {
    return '–û—Ç–ª–∏—á–Ω–æ, —Ä–∞–±–æ—Ç–∞–µ–º —Å Lua! –≠—Ç–æ –º–æ—â–Ω—ã–π —è–∑—ã–∫ –¥–ª—è —Å–∫—Ä–∏–ø—Ç–∏–Ω–≥–∞. –í–æ—Ç –±–∞–∑–æ–≤—ã–π –ø—Ä–∏–º–µ—Ä:\n\n```lua\nfunction greet(name)\n    print("–ü—Ä–∏–≤–µ—Ç, " .. name .. "!")\nend\n\ngreet("–ò–≥—Ä–æ–∫")\n```\n\n–ß—Ç–æ –∏–º–µ–Ω–Ω–æ –Ω—É–∂–Ω–æ —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –Ω–∞ Lua?';
  }
  
  if (lower.includes('–æ—à–∏–±–∫') || lower.includes('–Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç') || lower.includes('–±–∞–≥')) {
    return '–ü–æ–Ω–∏–º–∞—é, —Ä–∞–∑–±–µ—Ä–µ–º—Å—è —Å –æ—à–∏–±–∫–æ–π! –ü–æ–∫–∞–∂–∏ –º–Ω–µ –∫–æ–¥ –∫–æ—Ç–æ—Ä—ã–π –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, –∏ —è –ø–æ–º–æ–≥—É –Ω–∞–π—Ç–∏ –ø—Ä–æ–±–ª–µ–º—É –∏ –∏—Å–ø—Ä–∞–≤–∏—Ç—å –µ—ë.';
  }
  
  if (lower.includes('–∫–∞–∫') || lower.includes('—á—Ç–æ —Ç–∞–∫–æ–µ') || lower.includes('–æ–±—ä—è—Å–Ω–∏')) {
    return '–° —É–¥–æ–≤–æ–ª—å—Å—Ç–≤–∏–µ–º –æ–±—ä—è—Å–Ω—é! –Ø –º–æ–≥—É —Ä–∞—Å—Å–∫–∞–∑–∞—Ç—å –ø—Ä–æ –ª—é–±—ã–µ –∫–æ–Ω—Ü–µ–ø—Ü–∏–∏ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–∞ Python –∏ Lua. –ó–∞–¥–∞–≤–∞–π –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –≤–æ–ø—Ä–æ—Å, –∏ —è –¥–∞–º –ø–æ–¥—Ä–æ–±–Ω–æ–µ –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ —Å –ø—Ä–∏–º–µ—Ä–∞–º–∏.';
  }
  
  return '–ò–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π –≤–æ–ø—Ä–æ—Å! –Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ —Å:\n‚Ä¢ –ù–∞–ø–∏—Å–∞–Ω–∏–µ–º –∫–æ–¥–∞ –Ω–∞ Python –∏ Lua\n‚Ä¢ –û–±—ä—è—Å–Ω–µ–Ω–∏–µ–º –∫–∞–∫ —Ä–∞–±–æ—Ç–∞—é—Ç —Ñ—É–Ω–∫—Ü–∏–∏ –∏ –∞–ª–≥–æ—Ä–∏—Ç–º—ã\n‚Ä¢ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º –æ—à–∏–±–æ–∫\n‚Ä¢ –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏–µ–π –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏\n\n–û–ø–∏—à–∏ —Å–≤–æ—é –∑–∞–¥–∞—á—É –ø–æ–¥—Ä–æ–±–Ω–µ–µ, –∏ —è –¥–∞–º —Ç–æ—á–Ω—ã–π –æ—Ç–≤–µ—Ç!';
};

const Chat = () => {
  const navigate = useNavigate();
  const [messages, setMessages] = useState<Message[]>([
    {
      id: '1',
      role: 'assistant',
      content: '–ü—Ä–∏–≤–µ—Ç! üëã –Ø AI-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –¥–ª—è –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–∞ Lua –∏ Python. –ú–æ–≥—É –ø–æ–º–æ—á—å —Å –Ω–∞–ø–∏—Å–∞–Ω–∏–µ–º –∫–æ–¥–∞, –æ–±—ä—è—Å–Ω–∏—Ç—å –∫–æ–Ω—Ü–µ–ø—Ü–∏–∏ –∏–ª–∏ –∏—Å–ø—Ä–∞–≤–∏—Ç—å –æ—à–∏–±–∫–∏. –û —á—ë–º —Ö–æ—á–µ—à—å –ø–æ–≥–æ–≤–æ—Ä–∏—Ç—å?',
    },
  ]);
  const [input, setInput] = useState('');
  const [isTyping, setIsTyping] = useState(false);

  const handleSend = () => {
    if (!input.trim() || isTyping) return;

    const userMessage: Message = {
      id: Date.now().toString(),
      role: 'user',
      content: input,
    };

    setMessages([...messages, userMessage]);
    const currentInput = input;
    setInput('');
    setIsTyping(true);

    setTimeout(() => {
      const aiMessage: Message = {
        id: (Date.now() + 1).toString(),
        role: 'assistant',
        content: getAIResponse(currentInput),
      };
      setMessages((prev) => [...prev, aiMessage]);
      setIsTyping(false);
    }, 1000);
  };

  return (
    <div className="flex h-screen">
      <div className="w-64 bg-card border-r border-border flex flex-col">
        <div className="p-4 border-b border-border">
          <Button variant="ghost" onClick={() => navigate('/')} className="w-full justify-start mb-2">
            <Icon name="ArrowLeft" size={16} className="mr-2" />
            –ù–∞ –≥–ª–∞–≤–Ω—É—é
          </Button>
          <h2 className="font-semibold text-lg flex items-center gap-2 mt-4">
            <Icon name="Code" size={20} />
            Code Chat
          </h2>
        </div>
        <ScrollArea className="flex-1 p-4">
          <div className="space-y-2">
            <Button variant="secondary" className="w-full justify-start">
              <Icon name="MessageSquare" size={16} className="mr-2" />
              –¢–µ–∫—É—â–∏–π –¥–∏–∞–ª–æ–≥
            </Button>
            <Button variant="ghost" className="w-full justify-start">
              <Icon name="Plus" size={16} className="mr-2" />
              –ù–æ–≤—ã–π —á–∞—Ç
            </Button>
          </div>
        </ScrollArea>
      </div>

      <div className="flex-1 flex flex-col">
        <div className="border-b border-border px-6 py-4 bg-card">
          <h1 className="text-xl font-semibold">AI-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –¥–ª—è Lua –∏ Python</h1>
          <p className="text-sm text-muted-foreground">–ü–∏—à—É –∫–æ–¥, –æ–±—ä—è—Å–Ω—è—é –∏ –ø–æ–º–æ–≥–∞—é —Å –æ—à–∏–±–∫–∞–º–∏</p>
        </div>

        <ScrollArea className="flex-1 px-6">
          <div className="max-w-3xl mx-auto py-6 space-y-6">
            {messages.map((message) => (
              <div
                key={message.id}
                className={`flex gap-4 ${message.role === 'user' ? 'justify-end' : 'justify-start'}`}
              >
                {message.role === 'assistant' && (
                  <Avatar className="h-8 w-8 bg-primary">
                    <AvatarFallback className="bg-primary text-primary-foreground">AI</AvatarFallback>
                  </Avatar>
                )}
                <Card className={`p-4 max-w-[80%] ${message.role === 'user' ? 'bg-primary text-primary-foreground' : ''}`}>
                  <p className="text-sm leading-relaxed whitespace-pre-wrap">{message.content}</p>
                </Card>
                {message.role === 'user' && (
                  <Avatar className="h-8 w-8 bg-secondary">
                    <AvatarFallback>
                      <Icon name="User" size={16} />
                    </AvatarFallback>
                  </Avatar>
                )}
              </div>
            ))}
            {isTyping && (
              <div className="flex gap-4 justify-start">
                <Avatar className="h-8 w-8 bg-primary">
                  <AvatarFallback className="bg-primary text-primary-foreground">AI</AvatarFallback>
                </Avatar>
                <Card className="p-4">
                  <p className="text-sm text-muted-foreground">–ü–µ—á–∞—Ç–∞–µ—Ç...</p>
                </Card>
              </div>
            )}
          </div>
        </ScrollArea>

        <div className="border-t border-border p-4 bg-card">
          <div className="max-w-3xl mx-auto flex gap-2">
            <Textarea
              value={input}
              onChange={(e) => setInput(e.target.value)}
              onKeyDown={(e) => {
                if (e.key === 'Enter' && !e.shiftKey) {
                  e.preventDefault();
                  handleSend();
                }
              }}
              placeholder="–ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å –∏–ª–∏ –æ–ø–∏—à–∏—Ç–µ –∑–∞–¥–∞—á—É..."
              className="min-h-[60px] resize-none"
              disabled={isTyping}
            />
            <Button onClick={handleSend} size="icon" className="h-[60px] w-[60px] bg-primary" disabled={isTyping}>
              <Icon name="Send" size={20} />
            </Button>
          </div>
        </div>
      </div>
    </div>
  );
};

export default Chat;
